########################################
### This should be generated by PROGRAM's codeGen
.global main    # Entry point
.text
main:
# Prologue
  pushq   %rbp
  movq    %rsp, %rbp


########################################
###   write( "simpleWrite" )
.data
STRLIT01:  .asciz  "simpleWrite"
.text

movq  $STRLIT01, %rdi
call  writeString
call  writeNewLine

###   write( 1 )
.data
.align 4
INTLIT01:  .int  1
.text

movl  INTLIT01, %edi
call  writeInteger
call  writeNewLine

###   write( 2.3 )
.data
.align 8
REALIT01:  .double  2.3
.text

movq  REALIT01, %xmm0
call  writeReal
call  writeNewLine

##   write( "Integer : ", 4 )
.data
STRLIT02:  .asciz  "Integer : "
.text

movq  $STRLIT02, %rdi
call  writeString

.data
.align 4
INTLIT02:  .int  4
.text

movl  INTLIT02, %edi
call  writeInteger
call  writeNewLine

##   write( "Real    : ", 5.6 )
.data
STRLIT03:  .asciz  "Real   : "
.text

movq  $STRLIT03, %rdi
call  writeString

.data
.align 8
REALIT02:  .double  5.6
.text

movq  REALIT02, %xmm0
call  writeReal
call  writeNewLine

########################################
### This should be generated by PROGRAM's codeGen
# Exit status
  movl    $0, %eax
# Epilogue
  leave
  ret
